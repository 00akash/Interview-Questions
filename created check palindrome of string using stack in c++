# include<bits/stdc++.h>
using namespace std;

struct node
{
    char data;
    
    struct node *next;
};

struct node *head = NULL;

void push(char val)
{
   
    struct node *newNode = new node [sizeof(struct node)];
    newNode->data = val;

  
    newNode->next = head;

    
    head = newNode;
}

struct node* pop()
{
    struct node *temp;

    if(head == NULL){
        printf("Stack is Empty\n");
}
        

      
        temp = head;

        
        head = head->next;

       
       
     free(temp);
      return head;
    

}

void copy(string arr,int n){
    int i=0;
    int flag=0;
    struct node *p=head;
    while(p->next!=NULL){
   if(p->data!=arr[i]){
    flag=1;
   }
   p=p->next;
   i++;
    }
    if(flag==1){
        printf("not pallindrome");
    }
    else{
        printf("pallindrome");
    }

}
int main()
{ cout<<"string"<<endl;
   string s;
   cin>>s;
   for(int i=0;i<3;i++){
    push(s[i]);
   }

copy(s,s.length());

    return 0;
}
